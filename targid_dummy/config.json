{
  "dburl": "sqlite:///${phovea_server.dir}/targid_dummy/ab.sqlite",
  "index": "(t.rowid-1) as _index",
  "agg_score": {
    "query": "%(agg)s(%(score)s)",
    "replacements": ["agg", "score"]
  },
  "views": {
    "a": {
      "table": "a",
      "idType": "IDTypeA",
      "columns": {
        "a_name": {
          "label": "a_name",
          "type": "string"
        },
        "a_cat1": {
          "label": "a_cat1",
          "type": "categorical"
        },
        "a_cat2": {
          "label": "a_cat2",
          "type": "categorical"
        },
        "a_int": {
          "label": "a_int",
          "type": "number"
        },
        "a_real": {
          "label": "a_real",
          "type": "number"
        }
      },
      "column_query": "cast(id as text) as id, a_name, a_cat1, a_cat2, a_int, a_real",
      "queryStats": "SELECT min(a_int) as a_int_min, max(a_int) as a_int_max, min(a_real) as a_real_min, max(a_real) as a_real_max FROM ${table}",
      "queryCategories": "SELECT distinct %(col)s as cat FROM ${table} WHERE %(col)s is not null AND %(col)s <> ''",
      "query": "SELECT ${targid_dummy.index}, ${column_query} FROM ${table} t",
      "querySlice": "SELECT ${targid_dummy.index}, ${column_query} FROM ${table} t WHERE _index IN (:query)",
      "querySample": "SELECT ${targid_dummy.index} FROM ${table} t ORDER BY random() LIMIT %s",
      "querySort": "SELECT ${targid_dummy.index}, %s as _score FROM ${table} t ORDER BY _score %s",
      "querySearch": "SELECT ${targid_dummy.index} FROM ${table} t WHERE %s LIKE :query"
    },
    "a_namedset": {
      "idType": "IDTypeA",
      "query": [
        "SELECT ${targid_dummy.index}, ${targid_dummy.views.a.column_query} ",
        "FROM ${targid_dummy.views.a.table} t WHERE id IN (%(ids)s)"
      ],
      "replacements": ["ids"]
    },
    "a_filtered": {
      "idType": "IDTypeA",
      "query": "SELECT ${targid_dummy.index}, ${targid_dummy.views.a.column_query} FROM ${targid_dummy.views.a.table} t WHERE a_cat1 = :cat",
      "arguments": [
        "cat"
      ]
    },
    "b": {
      "table": "b",
      "idType": "IDTypeB",
      "columns": {
        "b_name": {
          "label": "b_name",
          "type": "string"
        },
        "b_cat1": {
          "label": "b_cat1",
          "type": "categorical"
        },
        "b_cat2": {
          "label": "b_cat2",
          "type": "categorical"
        },
        "b_int": {
          "label": "b_int",
          "type": "number"
        },
        "b_real": {
          "label": "b_real",
          "type": "number"
        }
      },
      "column_query": "cast(id as text) as id, b_name, b_cat1, b_cat2, b_int, b_real",
      "queryStats": "select min(b_int) as b_int_min, max(b_int) as b_int_max, min(b_real) as b_real_min, max(b_real) as b_real_max from ${table}",
      "queryCategories": "select distinct %(col)s as cat from ${table} where %(col)s is not null and %(col)s <> ''",
      "query": "select ${targid_dummy.index}, ${column_query} from ${table} t",
      "querySlice": "select ${targid_dummy.index}, ${column_query} from ${table} t where _index in (:query)",
      "querySample": "select ${targid_dummy.index} from ${table} t order by random() limit %s",
      "querySort": "select ${targid_dummy.index}, %s as _score from ${table} t order by _score %s",
      "querySearch": "select ${targid_dummy.index} from ${table} t where %s like :query"
    },
    "dummy_detail": {
      "idType": "IDTypeB",
      "query": "SELECT cast(a1.b_id as text) as id, a1.ab_real as value1, a2.ab_real as value2 FROM ab a1 INNER JOIN ab a2 ON a1.b_id = a2.b_id WHERE a1.a_id = :a_id1 and a2.a_id = :a_id2",
      "arguments": [
        "a_id1",
        "a_id2"
      ]
    },
    "dummy_dependent": {
      "idType": "IDTypeA",
      "query": "SELECT cast(a.id as text) as id, a_name, max(ab_int) as score FROM ab INNER JOIN a ON a.id = ab.a_id INNER JOIN  b ON b.id = ab.b_id WHERE ab.ab_cat = :ab_cat AND b.b_cat2 = :b_cat2 AND ab_int > (select max(ab_int) FROM ab INNER JOIN b ON b.id = ab.b_id WHERE ab.ab_cat = :ab_cat AND b.b_cat2 = :b_cat2 AND ab.a_id = :a_id) GROUP BY a.id",
      "arguments": [
        "a_id",
        "ab_cat",
        "b_cat2"
      ]
    },
    "score": {
      "idType": "IDTypeA",
      "query": "SELECT cast(a_id as text) as id, %(agg_score)s as score FROM ab INNER JOIN b ON b.id = ab.b_id WHERE b.b_cat2 = :b_cat2 GROUP BY ab.a_id",
      "replacements": ["agg", "score", "agg_score"],
      "arguments": ["b_cat2"]
    }
  },
  "mappings": {}
}
